document.querySelector('mutation-test-report-app').report = {"files":{"/home/eric/sd-07-project-react-testing-library/src/App.js":{"language":"javascript","mutants":[{"id":"1","location":{"end":{"column":54,"line":100},"start":{"column":47,"line":100}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"0","location":{"end":{"column":48,"line":99},"start":{"column":42,"line":99}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2","location":{"end":{"column":70,"line":101},"start":{"column":51,"line":101}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React, { Component } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\n\nimport {\n  About,\n  FavoritePokemons,\n  NotFound,\n  Pokedex,\n  PokemonDetails,\n} from './components';\n\nimport {\n  readFavoritePokemonIds,\n  updateFavoritePokemons,\n} from './services/pokedexService';\n\nimport pokemons from './data';\n\nimport './App.css';\n\nclass App extends Component {\n  static setIsPokemonFavoriteById() {\n    const favoritePokemonIds = readFavoritePokemonIds();\n    const isPokemonFavorite = pokemons.reduce((acc, pokemon) => {\n      acc[pokemon.id] = favoritePokemonIds.includes(pokemon.id);\n      return acc;\n    }, {});\n\n    return isPokemonFavorite;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = { isPokemonFavoriteById: App.setIsPokemonFavoriteById() };\n  }\n\n  onUpdateFavoritePokemons(pokemonId, isFavorite) {\n    updateFavoritePokemons(pokemonId, isFavorite);\n\n    this.setState(({ isPokemonFavoriteById: App.setIsPokemonFavoriteById() }));\n  }\n\n  renderPokedex() {\n    const { isPokemonFavoriteById } = this.state;\n\n    return (\n      <Pokedex\n        pokemons={ pokemons }\n        isPokemonFavoriteById={ isPokemonFavoriteById }\n      />\n    );\n  }\n\n  renderPokemonDetails(match) {\n    const { isPokemonFavoriteById } = this.state;\n\n    return (\n      <PokemonDetails\n        isPokemonFavoriteById={ isPokemonFavoriteById }\n        match={ match }\n        pokemons={ pokemons }\n        onUpdateFavoritePokemons={ (pokemonId, isFavorite) => (\n          this.onUpdateFavoritePokemons(pokemonId, isFavorite)\n        ) }\n      />\n    );\n  }\n\n  renderRoutes() {\n    const { isPokemonFavoriteById } = this.state;\n    const favoritePokemons = pokemons.filter(({ id }) => isPokemonFavoriteById[id]);\n\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={ ({ match }) => this.renderPokedex(match) }\n        />\n        <Route\n          path=\"/pokemons/:id\"\n          render={ ({ match }) => this.renderPokemonDetails(match) }\n        />\n        <Route\n          path=\"/favorites\"\n          render={ () => <FavoritePokemons pokemons={ favoritePokemons } /> }\n        />\n        <Route path=\"/about\" component={ About } />\n        <Route component={ NotFound } />\n      </Switch>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Pok√©dex</h1>\n        <nav>\n          <Link className=\"link\" to=\"/\">{`Home`}</Link>\n          <Link className=\"link\" to=\"/about\">{`About`}</Link>\n          <Link className=\"link\" to=\"/favorites\">{`Favorite Pok√©mons`}</Link>\n        </nav>\n        {this.renderRoutes()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"},"/home/eric/sd-07-project-react-testing-library/src/components/FavoritePokemons.js":{"language":"javascript","mutants":[{"id":"6","location":{"end":{"column":27,"line":15},"start":{"column":13,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"7","location":{"end":{"column":45,"line":15},"start":{"column":30,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { pokemonType } from '../types';\nimport Pokemon from './Pokemon';\n\nimport './favorite-pokemons.css';\n\nconst ZERO = 0;\n\nclass FavoritePokemons extends React.Component {\n  static notFound() {\n    return (\n      <div>\n        <p>{`No favorite ` + `pokemon found`}</p>\n      </div>\n    );\n  }\n\n  static renderFavoritePokemon(pokemon) {\n    return (\n      <div key={ pokemon.id } className=\"favorite-pokemon\">\n        <Pokemon pokemon={ pokemon } isFavorite />\n      </div>\n    );\n  }\n\n  renderFavoritePokemons() {\n    const { pokemons } = this.props;\n    const { renderFavoritePokemon } = FavoritePokemons;\n\n    return (\n      <div className=\"favorite-pokemons\">\n        {pokemons.map((pokemon) => renderFavoritePokemon(pokemon))}\n      </div>\n    );\n  }\n\n  render() {\n    const { notFound } = FavoritePokemons;\n    const { pokemons } = this.props;\n    const isEmpty = pokemons.length === ZERO;\n\n    return (\n      <div>\n        <h2> Favorite pok√©mons </h2>\n        {isEmpty ? notFound() : this.renderFavoritePokemons()}\n      </div>\n    );\n  }\n}\n\nFavoritePokemons.propTypes = {\n  pokemons: PropTypes.arrayOf(pokemonType.isRequired),\n};\n\nFavoritePokemons.defaultProps = {\n  pokemons: [],\n};\n\nexport default FavoritePokemons;\n"},"/home/eric/sd-07-project-react-testing-library/src/components/About.js":{"language":"javascript","mutants":[{"id":"3","location":{"end":{"column":18,"line":6},"start":{"column":10,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"5","location":{"end":{"column":113,"line":15},"start":{"column":14,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"4","location":{"end":{"column":30,"line":6},"start":{"column":21,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"import React from 'react';\nimport './about.css';\n\nconst About = () => (\n  <section>\n    <h2>{`About ` + `Pok√©dex`}</h2>\n    <section>\n      <p>\n        This application simulates a Pok√©dex, a\n        digital encliclopedia containing all Pok√©mons\n      </p>\n      <p>One can filter Pok√©mons by type, and see more details for each one of them</p>\n      <img\n        className=\"pokedex-image\"\n        src={`https://cdn.bulbagarden.net/upload/thumb/8/86/Gen_I_Pok%C3%A9dex.png/800px-Gen_I_Pok%C3%A9dex.png`}\n        alt=\"Pok√©dex\"\n      />\n    </section>\n  </section>\n);\n\nexport default About;\n"},"/home/eric/sd-07-project-react-testing-library/src/components/NotFound.js":{"language":"javascript","mutants":[{"id":"9","location":{"end":{"column":39,"line":7},"start":{"column":28,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"10","location":{"end":{"column":67,"line":12},"start":{"column":12,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"8","location":{"end":{"column":25,"line":7},"start":{"column":8,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\nimport './not-found.css';\n\nconst NotFound = () => (\n  <div className=\"not-found\">\n    <h2>\n      {`Page requested ` + `not found`}\n      <span role=\"img\" aria-label=\"Crying emoji\"> üò≠</span>\n    </h2>\n    <img\n      className=\"not-found-image\"\n      src={`https://media.giphy.com/media/kNSeTs31XBZ3G/giphy.gif`}\n      alt=\"Pikachu crying because the page requested was not found\"\n    />\n  </div>\n);\n\nexport default NotFound;\n"},"/home/eric/sd-07-project-react-testing-library/src/components/Pokedex.js":{"language":"javascript","mutants":[{"id":"11","location":{"end":{"column":56,"line":12},"start":{"column":51,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"12","location":{"end":{"column":33,"line":30},"start":{"column":28,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"13","location":{"end":{"column":52,"line":47},"start":{"column":47,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"14","location":{"end":{"column":17,"line":50},"start":{"column":12,"line":50}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"15","location":{"end":{"column":46,"line":54},"start":{"column":25,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"16","location":{"end":{"column":23,"line":59},"start":{"column":14,"line":59}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"17","location":{"end":{"column":36,"line":74},"start":{"column":14,"line":74}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"18","location":{"end":{"column":29,"line":86},"start":{"column":12,"line":86}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isPokemonFavoriteByIdType, pokemonType } from '../types';\nimport Button from './Button';\nimport Pokemon from './Pokemon';\nimport './pokedex.css';\n\nclass Pokedex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { pokemonIndex: 0, filteredType: 'all' };\n  }\n\n  filterPokemons(filteredType) {\n    this.setState({ filteredType, pokemonIndex: 0 });\n  }\n\n  nextPokemon(numberOfPokemons) {\n    this.setState((state) => (\n      { pokemonIndex: (state.pokemonIndex + 1) % numberOfPokemons }\n    ));\n  }\n\n  fetchFilteredPokemons() {\n    const { pokemons } = this.props;\n    const { filteredType } = this.state;\n\n    return pokemons.filter((pokemon) => {\n      if (filteredType === 'all') return true;\n      return pokemon.type === filteredType;\n    });\n  }\n\n  fetchPokemonTypes() {\n    const { pokemons } = this.props;\n\n    return [...new Set(pokemons.reduce((types, { type }) => [...types, type], []))];\n  }\n\n  renderPokemonButtonsPanel() {\n    const pokemonTypes = this.fetchPokemonTypes();\n\n    return (\n      <div className=\"pokedex-buttons-panel\">\n        <Button\n          onClick={ () => this.filterPokemons('all') }\n          className=\"filter-button\"\n        >\n          {`All`}\n        </Button>\n        {pokemonTypes.map((type) => (\n          <Button\n            dataTestId={`pokemon-type-button`}\n            key={ type }\n            onClick={ () => this.filterPokemons(type) }\n            className=\"filter-button\"\n          >\n            {`${type}`}\n          </Button>\n        ))}\n      </div>\n    );\n  }\n\n  render() {\n    const { isPokemonFavoriteById } = this.props;\n    const filteredPokemons = this.fetchFilteredPokemons();\n    const { pokemonIndex } = this.state;\n    const pokemon = filteredPokemons[pokemonIndex];\n\n    return (\n      <div className=\"pokedex\">\n        <h2>{`Encountered pok√©mons`}</h2>\n        <Pokemon\n          pokemon={ pokemon }\n          isFavorite={ isPokemonFavoriteById[pokemon.id] }\n        />\n        {this.renderPokemonButtonsPanel()}\n        <Button\n          dataTestId=\"next-pokemon\"\n          className=\"pokedex-button\"\n          onClick={ () => this.nextPokemon(filteredPokemons.length) }\n          disabled={ filteredPokemons.length <= 1 }\n        >\n          {`Pr√≥ximo pok√©mon`}\n        </Button>\n      </div>\n    );\n  }\n}\n\nPokedex.propTypes = {\n  isPokemonFavoriteById: isPokemonFavoriteByIdType.isRequired,\n  pokemons: PropTypes.arrayOf(pokemonType.isRequired).isRequired,\n};\n\nexport default Pokedex;\n"},"/home/eric/sd-07-project-react-testing-library/src/components/Pokemon.js":{"language":"javascript","mutants":[{"id":"19","location":{"end":{"column":49,"line":16},"start":{"column":40,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"20","location":{"end":{"column":48,"line":17},"start":{"column":39,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"22","location":{"end":{"column":56,"line":21},"start":{"column":40,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"21","location":{"end":{"column":57,"line":19},"start":{"column":12,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"24","location":{"end":{"column":53,"line":23},"start":{"column":37,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"23","location":{"end":{"column":28,"line":23},"start":{"column":18,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"26","location":{"end":{"column":48,"line":28},"start":{"column":17,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"25","location":{"end":{"column":32,"line":27},"start":{"column":16,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { pokemonType } from '../types';\n\nimport './pokemon.css';\n\nconst Pokemon = ({ pokemon, showDetailsLink, isFavorite }) => {\n  const { averageWeight, id, image, name, type } = pokemon;\n  const { measurementUnit, value } = averageWeight;\n\n  return (\n    <div className=\"pokemon\">\n      <div className=\"pokemon-overview\">\n        <p data-testid=\"pokemon-name\">{`${name}`}</p>\n        <p data-testid=\"pokemonType\">{`${type}`}</p>\n        <p data-testid=\"pokemon-weight\">\n          {`Average weight: ${value} ${measurementUnit}`}\n        </p>\n        {showDetailsLink && <Link to={ `pokemons/${id}` }>More details</Link>}\n      </div>\n      <img src={ `${image}` } alt={ `${name} sprite` } />\n      {isFavorite && (\n        <img\n          className=\"favorite-icon\"\n          src={`/star-icon.svg`}\n          alt={ `${name} is marked as favorite` }\n        />\n      )}\n    </div>\n  );\n};\n\nPokemon.propTypes = {\n  isFavorite: PropTypes.bool.isRequired,\n  pokemon: pokemonType.isRequired,\n  showDetailsLink: PropTypes.bool,\n};\n\nPokemon.defaultProps = {\n  showDetailsLink: true,\n};\n\nexport default Pokemon;\n"},"/home/eric/sd-07-project-react-testing-library/src/components/PokemonDetails.js":{"language":"javascript","mutants":[{"id":"28","location":{"end":{"column":46,"line":13},"start":{"column":37,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"27","location":{"end":{"column":34,"line":13},"start":{"column":14,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"29","location":{"end":{"column":34,"line":17},"start":{"column":26,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"30","location":{"end":{"column":52,"line":17},"start":{"column":42,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"31","location":{"end":{"column":65,"line":17},"start":{"column":55,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"32","location":{"end":{"column":23,"line":29},"start":{"column":14,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"33","location":{"end":{"column":25,"line":30},"start":{"column":13,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"34","location":{"end":{"column":33,"line":53},"start":{"column":12,"line":53}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"35","location":{"end":{"column":32,"line":80},"start":{"column":14,"line":80}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"36","location":{"end":{"column":44,"line":80},"start":{"column":35,"line":80}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isPokemonFavoriteByIdType, pokemonType } from '../types';\nimport Pokemon from './Pokemon';\n\nimport './pokemon-details.css';\n\nclass PokemonDetails extends React.Component {\n  static renderHabitat({ foundAt, name }) {\n    return (\n      <section>\n        <h2>{`Game Locations of ` + `${name}`}</h2>\n        <div className=\"pokemon-habitat\">\n          {foundAt.map(({ location, map }) => (\n            <div key={ location }>\n              <img src={ `${map}` } alt={`${name} ` + `location`} />\n              <p><em>{location}</em></p>\n            </div>\n          ))}\n        </div>\n      </section>\n    );\n  }\n\n  static renderSummary({ summary }) {\n    return (\n      <section>\n        <h2>{`Summary`}</h2>\n        <p>{`${summary}`}</p>\n      </section>\n    );\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.renderFavoriteInput = this.renderFavoriteInput.bind(this);\n  }\n\n  findPokemon(givenId) {\n    const { pokemons } = this.props;\n\n    return pokemons.find(({ id }) => id === givenId);\n  }\n\n  renderFavoriteInput(pokemonId, isFavorite) {\n    const { onUpdateFavoritePokemons } = this.props;\n\n    return (\n      <form className=\"favorite-form\">\n        <label htmlFor=\"favorite\">\n          {`Pok√©mon favoritado?`}\n          <input\n            type=\"checkbox\"\n            id=\"favorite\"\n            checked={ isFavorite }\n            onChange={\n              ({ target: { checked } }) => onUpdateFavoritePokemons(pokemonId, checked)\n            }\n          />\n        </label>\n      </form>\n    );\n  }\n\n  render() {\n    const { renderHabitat, renderSummary } = PokemonDetails;\n    const { renderFavoriteInput } = this;\n    const {\n      match: { params: { id } },\n      isPokemonFavoriteById,\n    } = this.props;\n\n    const pokemon = this.findPokemon(parseInt(id, 10));\n    const isFavorite = isPokemonFavoriteById[id];\n\n    return (\n      <section className=\"pokemon-details\">\n        <h2>{`${pokemon.name} ` + `Details`}</h2>\n        <Pokemon\n          pokemon={ pokemon }\n          showDetailsLink={ false }\n          isFavorite={ isFavorite }\n        />\n        {renderSummary(pokemon)}\n        {renderHabitat(pokemon)}\n        {renderFavoriteInput(pokemon.id, isFavorite)}\n      </section>\n    );\n  }\n}\n\nPokemonDetails.propTypes = {\n  isPokemonFavoriteById: isPokemonFavoriteByIdType.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  onUpdateFavoritePokemons: PropTypes.func.isRequired,\n  pokemons: PropTypes.arrayOf(pokemonType.isRequired).isRequired,\n};\n\nexport default PokemonDetails;\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};